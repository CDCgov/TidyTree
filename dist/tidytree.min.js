var TidyTree=function(){"use strict";var global,factory;function TidyTree(data,options,events){options||(options={}),Object.assign(this,{layout:"vertical",type:"tree",mode:"smooth",colorOptions:{nodeColorMode:"none"},leafNodes:!0,leafLabels:!1,equidistantLeaves:!1,branchNodes:!1,branchLabels:!1,branchDistances:!1,hStretch:1,vStretch:1,rotation:0,ruler:!0,animation:500,margin:[50,50,50,50]},options,{events:{draw:[],showtooltip:[],hidetooltip:[],contextmenu:[],search:[],select:[]}}),events&&Object.keys(events).forEach((e=>this.events[e].push(events[e]))),this.parent&&this.draw(this.parent),data instanceof patristic.Branch?this.setData(data):this.setTree(data),this.parent&&this.recenter()}global=void 0,factory=function(exports){function Branch(data,children){data||(data={}),children||(children=d=>d.children),Object.assign(this,{_guid:([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(a=>(a^16*Math.random()>>a/4).toString(16))),id:data.id||"",data:data,depth:data.depth||0,height:data.height||0,length:data.length||0,parent:data.parent||null,children:children(data)||[],value:data.value||1,respresenting:1})}function parseJSON(json,idLabel,lengthLabel,childrenLabel){idLabel||(idLabel="id"),lengthLabel||(lengthLabel="length"),childrenLabel||(childrenLabel="children"),"string"==typeof json&&(json=JSON.parse(json));let root=new Branch({id:json[idLabel],length:json[lengthLabel]});return json[childrenLabel]instanceof Array&&json[childrenLabel].forEach((child=>{root.addChild(parseJSON(child))})),root.fixDistances()}function search(t){let q,c2,qMin=1/0,D=t.D,n2=t.cN-2,S=t.S,I=t.I,rowSums=t.rowSums,removedColumns=t.removedIndices,uMax=t.rowSumMax,minI=-1,minJ=-1;for(let r=0;r<t.N;r++)removedColumns.has(r)||(c2=I[r][0],removedColumns.has(c2)||(q=D[r][c2]*n2-rowSums[r]-rowSums[c2],q<qMin&&(qMin=q,minI=r,minJ=c2)));for(let r=0;r<t.N;r++)if(!removedColumns.has(r))for(let c=0;c<S[r].length;c++)if(c2=I[r][c],!removedColumns.has(c2)){if(S[r][c]*n2-rowSums[r]-uMax>qMin)break;q=D[r][c2]*n2-rowSums[r]-rowSums[c2],q<qMin&&(qMin=q,minI=r,minJ=c2)}return{minI:minI,minJ:minJ}}function recalculateDistanceMatrix(t,joinedIndex1,joinedIndex2){let aux,aux2,D=t.D,n=D.length,sum=0,removedIndices=t.removedIndices,rowSums=t.rowSums,newRow=t.newRow,rowChange=t.rowChange,newMax=0;removedIndices.add(joinedIndex1);for(let i=0;i<n;i++)removedIndices.has(i)||(aux=D[joinedIndex1][i]+D[joinedIndex2][i],aux2=D[joinedIndex1][joinedIndex2],newRow[i]=.5*(aux-aux2),sum+=newRow[i],rowChange[i]=-.5*(aux+aux2));for(let i=0;i<n;i++)D[joinedIndex1][i]=-1,D[i][joinedIndex1]=-1,removedIndices.has(i)||(D[joinedIndex2][i]=newRow[i],D[i][joinedIndex2]=newRow[i],rowSums[i]+=rowChange[i],rowSums[i]>newMax&&(newMax=rowSums[i]));rowSums[joinedIndex1]=0,rowSums[joinedIndex2]=sum,sum>newMax&&(newMax=sum),t.rowSumMax=newMax,t.indicesLeft.delete(joinedIndex1)}function sortWithIndices(toSort,skip){void 0===skip&&(skip=-1);let n=toSort.length,indexCopy=new Array(n),valueCopy=new Array(n),i2=0;for(let i=0;i<n;i++)-1!==toSort[i]&&i!==skip&&(indexCopy[i2]=i,valueCopy[i2++]=toSort[i]);indexCopy.length=i2,valueCopy.length=i2,indexCopy.sort(((a,b)=>toSort[a]-toSort[b])),valueCopy.sortIndices=indexCopy;for(let j=0;j<i2;j++)valueCopy[j]=toSort[indexCopy[j]];return valueCopy}Branch.prototype.addChild=function(data){let c;return data instanceof Branch?(c=data,c.parent=this):(data||(data={}),c=new Branch(Object.assign(data,{parent:this}))),this.children.push(c),c},Branch.prototype.addParent=function(data,siblings){let c;return siblings||(siblings=[]),data instanceof Branch?c=data:(data||(data={}),c=new Branch(Object.assign(data))),siblings.forEach((sib=>sib.setParent(c))),c.children=[this].concat(siblings),this.parent=c,this},Branch.prototype.ancestors=function(){return this.getAncestors(!0)},Branch.prototype.clone=function(){return parseJSON(this.toObject())},Branch.prototype.consolidate=function(){return this.eachAfter((branch=>{branch.isRoot()||branch.length>=5e-4||(""==branch.parent.id?branch.parent.id=branch.id:branch.parent.id+="+"+branch.id,branch.excise())})).fixDistances()},Branch.prototype.copy=function(){let newThis=parseJSON(JSON.stringify(this));return newThis.parent=null,newThis.fixDistances()},Branch.prototype.count=function(){return this.sum((()=>1))},Branch.prototype.descendants=function(){return this.getDescendants(!0)},Branch.prototype.depthOf=function(descendant){let distance=0;if("string"==typeof descendant&&(descendant=this.getDescendant(descendant)),void 0===descendant)throw Error("Cannot compute depth of undefined descendant!");let current=descendant;for(;current!=this;)distance+=current.length,current=current.parent;return distance},Branch.prototype.distanceBetween=function(descendantA,descendantB){let mrca=descendantA.getMRCA(descendantB);return mrca.depthOf(descendantA)+mrca.depthOf(descendantB)},Branch.prototype.distanceTo=function(cousin){let mrca=this.getMRCA(cousin);return mrca.depthOf(this)+mrca.depthOf(cousin)},Branch.prototype.each=function(callback){let current,branch=this,next=[branch];for(;next.length;)for(current=next.reverse(),next=[];branch=current.pop();)callback(branch),branch.eachChild((child=>next.push(child)));return this},Branch.prototype.eachAfter=function(callback){return this.eachChild((child=>child.eachAfter(callback))),callback(this),this},Branch.prototype.eachBefore=function(callback){return callback(this),this.eachChild((child=>child.eachBefore(callback))),this},Branch.prototype.eachChild=function(callback){return this.children.forEach(callback),this},Branch.prototype.excise=function(){if(this.isRoot()&&this.children.length>1)throw new Error("Cannot excise a root Branch with multiple children.");return this.eachChild((child=>{child.length+=this.length,child.parent=this.parent,this.isRoot()||this.parent.children.push(child)})),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.representing++,this.parent},Branch.prototype.fixDistances=function(){let maxdepth=0;return this.getRoot().depth=0,this.eachBefore((d=>{d.isRoot()||(d.depth=d.parent.depth+1,d.depth>maxdepth&&(maxdepth=d.depth))})).eachAfter((d=>{d.height=maxdepth-d.depth,d.value=d.value+d.children.reduce(((a,c)=>a+c.value),0)})),this},Branch.prototype.fixParenthood=function(nonrecursive){return this.children.forEach((child=>{child.parent||(child.parent=this),child.parent!==this&&(child.parent=this),!nonrecursive&&child.children.length>0&&child.fixParenthood()})),this},Branch.prototype.flip=function(){return this.each((c=>c.rotate()))},Branch.prototype.getAncestors=function(includeSelf){let ancestors=includeSelf?[this]:[],current=this;for(;current=current.parent;)ancestors.push(current);return ancestors},Branch.prototype.getChild=function(childID){return this.children.find((c=>c.id===childID))},Branch.prototype.getDescendant=function(id){if(this.id===id)return this;let children=this.children,n=children.length;if(children)for(let i=0;i<n;i++){let descendant=children[i].getDescendant(id);if(descendant)return descendant}},Branch.prototype.getDescendants=function(includeSelf){let descendants=includeSelf?[this]:[];return this.isLeaf()||this.children.forEach((child=>{child.getDescendants(!0).forEach((d=>descendants.push(d)))})),descendants},Branch.prototype.getLeafs=function(){return this.getLeaves()},Branch.prototype.getLeaves=function(){if(this.isLeaf())return[this];{let descendants=[];return this.children.forEach((child=>{child.getLeaves().forEach((d=>descendants.push(d)))})),descendants}},Branch.prototype.getMRCA=function(cousin){let mrca=this;for(;!mrca.hasDescendant(cousin);){if(mrca.isRoot())throw Error("Branch and cousin do not appear to share a common ancestor!");mrca=mrca.parent}return mrca},Branch.prototype.getRoot=function(){let branch=this;for(;!branch.isRoot();)branch=branch.parent;return branch},Branch.prototype.hasChild=function(child){if(child instanceof Branch)return this.children.includes(child);if("string"==typeof child)return this.children.some((c=>c.id===child));throw Error(`Unknown type of child (${typeof child}) passed to Branch.hasChild!`)},Branch.prototype.hasDescendant=function(descendant){let descendants=this.getDescendants();if(descendant instanceof Branch)return descendants.some((d=>d===descendant));if("string"==typeof descendant)return descendants.some((d=>d.id===descendant));throw Error("Unknown type of descendant passed to Branch.hasDescendant!")},Branch.prototype.hasLeaf=function(leaf){let leaves=this.getleaves();if(leaf instanceof Branch)return leaves.includes(leaf);if("string"==typeof leaf)return leaves.some((d=>d.id===leaf));throw Error("Unknown type of leaf passed to Branch.hasLeaf.")},Branch.prototype.invert=function(){let oldParent=this.parent;if(!oldParent)throw Error("Cannot invert root node!");{let temp=this.parent.length;this.parent.length=this.length,this.length=temp,this.parent=oldParent.parent,this.children.push(oldParent),oldParent.parent=this,oldParent.children.splice(oldParent.children.indexOf(this),1)}return this},Branch.prototype.isChildOf=function(parent){if(parent instanceof Branch)return this.parent===parent;if("string"==typeof parent)return this.parent.id===parent;throw Error("Unknown parent type passed to Branch.isChildOf")},Branch.prototype.isConsistent=function(){return!(!this.isRoot()&&!this.parent.children.includes(this))&&(!!this.isLeaf()||!this.children.some((c=>c.parent!==this))&&this.children.every((c=>c.isConsistent())))},Branch.prototype.isDescendantOf=function(ancestor){return!(!ancestor||!this.parent)&&(this.parent===ancestor||this.parent.id===ancestor||this.parent.isDescendantOf(ancestor))},Branch.prototype.isLeaf=function(){return 0===this.children.length},Branch.prototype.isolate=function(){let index=this.parent.children.indexOf(this);return this.parent.children.splice(index,1),this.setParent(null),this},Branch.prototype.isRoot=function(){return null===this.parent},Branch.prototype.leafs=function(){return this.getLeaves()},Branch.prototype.leaves=function(){return this.getLeaves()},Branch.prototype.links=function(){let links=[];return this.each((d=>{d.isRoot()||links.push({source:d.parent,target:d})})),links},Branch.prototype.normalize=function(newmin,newmax){"number"!=typeof newmax&&(newmax=1),"number"!=typeof newmin&&(newmin=0);let min=1/0,max=-1/0;this.each((d=>{d.value<min&&(min=d.value),d.value>max&&(max=d.value)}));let ratio=(newmax-newmin)/(max-min);return this.each((d=>d.value=(d.value-min)*ratio+newmin))},Branch.prototype.path=function(target){let current=this,branches=[this],mrca=this.getMRCA(target);for(;current!==mrca;)current=current.parent,branches.push(current);let k=branches.length;for(current=target;current!==mrca;)branches.splice(k,0,current),current=current.parent;return branches},Branch.prototype.remove=function(){let root=this.getRoot();return this.isolate(),root},Branch.prototype.replace=function(replacement){let root=this.getRoot();this.parent;let index=this.parent.children.indexOf(this);return this.parent.children.splice(index,1,replacement),root},Branch.prototype.reroot=function(){let current=this,toInvert=[];for(;!current.isRoot();)toInvert.push(current),current=current.parent;return toInvert.reverse().forEach((c=>c.invert())),this.fixDistances()},Branch.prototype.rotate=function(recursive){return this.children?(this.children.reverse(),this):this},Branch.prototype.setLength=function(length){return this.length=length,this},Branch.prototype.setParent=function(parent){if(!parent instanceof Branch&&null!==parent)throw Error("Cannot set parent to non-Branch object!");return this.parent=parent,this},Branch.prototype.simplify=function(){return this.eachAfter((branch=>{if(1==branch.children.length){let child=branch.children[0];""==child.id?child.id=branch.id:child.id=branch.id+"+"+child.id,branch.excise()}})),this.fixDistances()},Branch.prototype.sort=function(comparator){return comparator||(comparator=(a,b)=>a.value-b.value),this.eachBefore((d=>d.children.sort(comparator)))},Branch.prototype.sources=function(cousin){let mrca=this.getMRCA(cousin);return mrca.depthOf(this)<mrca.depthOf(cousin)},Branch.prototype.sum=function(value){return value||(value=d=>d.value),this.eachAfter((d=>d.value=value(d)+d.children.reduce(((a,c)=>a+c.value),0)))},Branch.prototype.targets=function(cousin){return cousin.sources(this)},Branch.prototype.toJSON=function(){return this.toObject()},Branch.prototype.toMatrix=function(){let leafs=this.getLeaves(),n=leafs.length,matrix=new Array(n);for(let i=0;i<n;i++){matrix[i]=new Array(n),matrix[i][i]=0;for(let j=0;j<i;j++){let distance=leafs[i].distanceTo(leafs[j]);matrix[i][j]=distance,matrix[j][i]=distance}}return{matrix:matrix,ids:leafs.map((d=>d.id))}},Branch.prototype.toNewick=function(nonterminus){let out="";return this.isLeaf()||(out+="("+this.children.map((child=>child.toNewick(!0))).join(",")+")"),out+=this.id,this.length&&(out+=":"+function(num){let numStr=String(num);if(Math.abs(num)<1){let e=parseInt(num.toString().split("e-")[1]);if(e){let negative=num<0;negative&&(num*=-1),num*=Math.pow(10,e-1),numStr="0."+new Array(e).join("0")+num.toString().substring(2),negative&&(numStr="-"+numStr)}}else{let e=parseInt(num.toString().split("+")[1]);e>20&&(e-=20,numStr=(num/=Math.pow(10,e)).toString()+new Array(e+1).join("0"))}return numStr}(this.length)),nonterminus||(out+=";"),out},Branch.prototype.toObject=function(){let output={id:this.id,length:this.length};return this.children.length>0&&(output.children=this.children.map((c=>c.toObject()))),output},Branch.prototype.toString=function(replacer,width){return replacer||(replacer=null),width||(width=0),JSON.stringify(this,replacer,width)},exports.Branch=Branch,exports.parseJSON=parseJSON,exports.parseMatrix=function(matrix,labels){let minI,minJ,d1,d2,l1,l2,node1,node2,node3,that={},N=that.N=matrix.length;labels||(labels=[...Array(N).keys()]),that.cN=that.N,that.D=matrix,that.labels=labels,that.labelToTaxon={},that.currIndexToLabel=new Array(N),that.rowChange=new Array(N),that.newRow=new Array(N),that.labelToNode=new Array(2*N),that.nextIndex=N,that.I=new Array(that.N),that.S=new Array(that.N);for(let i=0;i<that.N;i++){let sortedRow=sortWithIndices(that.D[i],i);that.S[i]=sortedRow,that.I[i]=sortedRow.sortIndices}that.removedIndices=new Set,that.indicesLeft=new Set;for(let i=0;i<N;i++)that.currIndexToLabel[i]=i,that.indicesLeft.add(i);function setUpNode(labelIndex,distance){let node;return labelIndex<that.N?(node=new Branch({id:that.labels[labelIndex],length:distance}),that.labelToNode[labelIndex]=node):(node=that.labelToNode[labelIndex],node.setLength(distance)),node}that.rowSumMax=0,that.PNewick="",that.rowSums=function(a){let n=a.length,sums=new Array(n);for(let i=0;i<n;i++){let sum=0;for(let j=0;j<n;j++)"number"==typeof parseFloat(a[i][j])&&(sum+=a[i][j]);sums[i]=sum}return sums}(that.D);for(let i=0;i<that.cN;i++)that.rowSums[i]>that.rowSumMax&&(that.rowSumMax=that.rowSums[i]);for(;that.cN>2;){({minI:minI,minJ:minJ}=search(that)),d1=.5*that.D[minI][minJ]+(that.rowSums[minI]-that.rowSums[minJ])/(2*that.cN-4),d2=that.D[minI][minJ]-d1,l1=that.currIndexToLabel[minI],l2=that.currIndexToLabel[minJ],node1=setUpNode(l1,d1),node2=setUpNode(l2,d2),node3=new Branch({children:[node1,node2]}),recalculateDistanceMatrix(that,minI,minJ);let sorted=sortWithIndices(that.D[minJ],minJ);that.S[minJ]=sorted,that.I[minJ]=sorted.sortIndices,that.S[minI]=that.I[minI]=[],that.cN--,that.labelToNode[that.nextIndex]=node3,that.currIndexToLabel[minI]=-1,that.currIndexToLabel[minJ]=that.nextIndex++}let left=that.indicesLeft.values();minI=left.next().value,minJ=left.next().value,l1=that.currIndexToLabel[minI],l2=that.currIndexToLabel[minJ],d1=d2=that.D[minI][minJ]/2,node1=setUpNode(l1,d1),node2=setUpNode(l2,d2);let tree=new Branch({children:[node1,node2]});return tree.fixParenthood(),tree.fixDistances()},exports.parseNewick=function(newick){let ancestors=[],tree=new Branch,tokens=newick.split(/\s*(;|\(|\)|,|:)\s*/),n=tokens.length;for(let t=0;t<n;t++){let c,token=tokens[t];switch(token){case"(":c=tree.addChild(),ancestors.push(tree),tree=c;break;case",":c=ancestors[ancestors.length-1].addChild(),tree=c;break;case")":tree=ancestors.pop();break;case":":break;default:let x=tokens[t-1];")"==x||"("==x||","==x?tree.id=token:":"==x&&(tree.length=parseFloat(token))}}return tree.fixDistances()},exports.version="0.5.7",Object.defineProperty(exports,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?factory(exports):"function"==typeof define&&define.amd?define(["exports"],factory):factory((global="undefined"!=typeof globalThis?globalThis:global||self).patristic={}),TidyTree.prototype.setData=function(data){if(!data)throw Error("Invalid Data");return this.data=data,this.range=[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER],this.hierarchy=d3.hierarchy(this.data,(d=>d.children)).eachBefore((d=>{d.value=(d.parent?d.parent.value:0)+(d.data.length?Math.abs(d.data.length):0),d.value<this.range[0]&&(this.range[0]=d.value),d.value>this.range[1]&&(this.range[1]=d.value)})).each((d=>d.value/=this.range[1])),this.parent?this.redraw():this},TidyTree.prototype.setTree=function(newick){if(!newick)throw Error("Invalid Newick String");return this.setData(patristic.parseNewick(newick))},TidyTree.validLayouts=["horizontal","vertical","circular"],TidyTree.validTypes=["tree","weighted","dendrogram"],TidyTree.validModes=["smooth","square","straight"],TidyTree.validNodeColorModes=["none","list"],TidyTree.validBranchColorModes=["none","monophyletic"],TidyTree.prototype.draw=function(selector){if(!selector&&!this.parent)throw Error("No valid target for drawing given! Where should the tree go?");let parent=this.parent=d3.select(selector||this.parent);this.width=parseFloat(parent.style("width"))-this.margin[1]-this.margin[3],this.height=parseFloat(parent.style("height"))-this.margin[0]-this.margin[2]-25;d3.tree();let svg=parent.html(null).append("svg").attr("width","100%").attr("height","100%"),g=svg.append("g");return svg.append("g").attr("class","tidytree-ruler").append("rect").attr("y",-5).attr("fill","white"),this.zoom=d3.zoom().on("zoom",(()=>{let transform=this.transform=d3.event.transform;g.attr("transform",`translate(${transform.x},${transform.y}) scale(${transform.k}) rotate(${this.rotation},${"circular"===this.layout?0:this.width/2},${"circular"===this.layout?0:this.height/2})`),updateRuler.call(this,transform)})),svg.call(this.zoom),g.append("g").attr("class","tidytree-links"),g.append("g").attr("class","tidytree-nodes"),this.events.draw.length&&this.events.draw.forEach((c=>c())),this};const getX=d=>d.x,getY=d=>d.y,getLength=d=>d.weight;let linkTransformers={tree:{smooth:{horizontal:d3.linkHorizontal().x(getY).y(getX),vertical:d3.linkVertical().x(getX).y(getY),circular:d3.linkRadial().angle(getX).radius(getY)},straight:{horizontal:d=>`M${d.source.y} ${d.source.x} L ${d.target.y} ${d.target.x}`,vertical:d=>`M${d.source.x} ${d.source.y} L ${d.target.x} ${d.target.y}`,circular:d=>{const startAngle=d.source.x-Math.PI/2,startRadius=d.source.y,endAngle=d.target.x-Math.PI/2,endRadius=d.target.y;return"M"+startRadius*Math.cos(startAngle)+","+startRadius*Math.sin(startAngle)+"L"+endRadius*Math.cos(endAngle)+","+endRadius*Math.sin(endAngle)}},square:{horizontal:d=>`M${d.source.y} ${d.source.x} V ${d.target.x} H ${d.target.y}`,vertical:d=>`M${d.source.x} ${d.source.y} H ${d.target.x} V ${d.target.y}`,circular:d=>{const startAngle=d.source.x-Math.PI/2,startRadius=d.source.y,endAngle=d.target.x-Math.PI/2,endRadius=d.target.y,x0=Math.cos(startAngle),y0=Math.sin(startAngle),x1=Math.cos(endAngle),y1=Math.sin(endAngle);return"M"+startRadius*x0+","+startRadius*y0+(endAngle===startAngle?"":"A"+startRadius+","+startRadius+" 0 0 "+(endAngle>startAngle?1:0)+" "+startRadius*x1+","+startRadius*y1)+"L"+endRadius*x1+","+endRadius*y1}}},weighted:{smooth:{horizontal:d3.linkHorizontal().x(getLength).y(getX),vertical:d3.linkVertical().x(getX).y(getLength),circular:d3.linkRadial().angle(getX).radius(getLength)},straight:{horizontal:d=>`M${d.source.weight} ${d.source.x} L ${d.target.weight} ${d.target.x}`,vertical:d=>`M${d.source.x} ${d.source.weight} L ${d.target.x} ${d.target.weight}`,circular:d=>{const startAngle=d.source.x-Math.PI/2,startRadius=d.source.weight,endAngle=d.target.x-Math.PI/2,endRadius=d.target.weight;return"M"+startRadius*Math.cos(startAngle)+","+startRadius*Math.sin(startAngle)+"L"+endRadius*Math.cos(endAngle)+","+endRadius*Math.sin(endAngle)}},square:{horizontal:d=>`M${d.source.weight} ${d.source.x} V ${d.target.x} H ${d.target.weight}`,vertical:d=>`M${d.source.x} ${d.source.weight} H ${d.target.x} V ${d.target.weight}`,circular:d=>{const startAngle=d.source.x-Math.PI/2,startRadius=d.source.weight,endAngle=d.target.x-Math.PI/2,endRadius=d.target.weight,x0=Math.cos(startAngle),y0=Math.sin(startAngle),x1=Math.cos(endAngle),y1=Math.sin(endAngle);return"M"+startRadius*x0+","+startRadius*y0+(endAngle===startAngle?"":"A"+startRadius+","+startRadius+" 0 0 "+(endAngle>startAngle?1:0)+" "+startRadius*x1+","+startRadius*y1)+"L"+endRadius*x1+","+endRadius*y1}}}};function circularPoint(x,y){return[(y=+y)*Math.cos(x-=Math.PI/2),y*Math.sin(x)]}linkTransformers.dendrogram=linkTransformers.tree;let nodeTransformers={tree:{horizontal:d=>`translate(${d.y}, ${d.x})`,vertical:d=>`translate(${d.x}, ${d.y})`,circular:d=>`translate(${circularPoint(d.x,d.y)})`},weighted:{horizontal:d=>`translate(${d.weight}, ${d.x})`,vertical:d=>`translate(${d.x}, ${d.weight})`,circular:d=>`translate(${circularPoint(d.x,d.weight)})`}};function findNodeColor(node,colorOptions){if("none"===colorOptions.nodeColorMode)return colorOptions.defaultNodeColor??"#4682B4";let nodeList=colorOptions.nodeList;return nodeList&&nodeList.includes(node.data._guid)?colorOptions.highlightColor??"#feb640":colorOptions.defaultNodeColor??"#243127"}function findBranchColor(link,colorOptions){if("none"===colorOptions.branchColorMode)return colorOptions.defaultBranchColor??"#cccccc";return getAllLeaves(link.source).every((child=>colorOptions.nodeList?.includes(child.data._guid)))?colorOptions.highlightColor??"#feb640":colorOptions.defaultBranchColor??"#cccccc"}function getAllLeaves(node,includeSelf){let leaves=[];return(includeSelf=includeSelf??!1)&&0===node.height?leaves.push(node):node.children.forEach((child=>{leaves.push(...getAllLeaves(child,!0))})),leaves}nodeTransformers.dendrogram=nodeTransformers.tree;const radToDeg=180/Math.PI;let labelTransformers={tree:{straight:{horizontal:l=>`translate(${(l.source.y+l.target.y)/2}, ${(l.source.x+l.target.x)/2}) rotate(${Math.atan((l.target.x-l.source.x)/(l.target.y-l.source.y))*radToDeg})`,vertical:l=>`translate(${(l.source.x+l.target.x)/2}, ${(l.source.y+l.target.y)/2}) rotate(${Math.atan((l.source.y-l.target.y)/(l.source.x-l.target.x))*radToDeg})`,circular:l=>{let s=circularPoint(l.source.x,l.source.y),t=circularPoint(l.target.x,l.target.y);return`translate(${(s[0]+t[0])/2}, ${(s[1]+t[1])/2}) rotate(${Math.atan((s[1]-t[1])/(s[0]-t[0]))*radToDeg})`}},square:{horizontal:l=>`translate(${(l.source.y+l.target.y)/2}, ${l.target.x})`,vertical:l=>`translate(${l.target.x}, ${(l.source.y+l.target.y)/2}) rotate(90)`,circular:l=>{let u=circularPoint(l.target.x,(l.source.y+l.target.y)/2);return`translate(${u[0]}, ${u[1]}) rotate(${l.target.x*radToDeg%180-90})`}}},weighted:{straight:{horizontal:l=>`translate(${(l.source.weight+l.target.weight)/2}, ${(l.source.x+l.target.x)/2}) rotate(${Math.atan((l.target.x-l.source.x)/(l.target.weight-l.source.weight))*radToDeg})`,vertical:l=>`translate(${(l.source.x+l.target.x)/2}, ${(l.source.weight+l.target.weight)/2}) rotate(${Math.atan((l.source.weight-l.target.weight)/(l.source.x-l.target.x))*radToDeg})`,circular:l=>{let s=circularPoint(l.source.x,l.source.weight),t=circularPoint(l.target.x,l.target.weight);return`translate(${(s[0]+t[0])/2}, ${(s[1]+t[1])/2}) rotate(${Math.atan((s[1]-t[1])/(s[0]-t[0]))*radToDeg})`}},square:{horizontal:l=>`\n        translate(${(l.source.weight+l.target.weight)/2}, ${l.target.x})\n      `,vertical:l=>`\n        translate(${l.target.x}, ${(l.source.weight+l.target.weight)/2})\n        rotate(90)\n      `,circular:l=>{let u=circularPoint(l.target.x,(l.source.weight+l.target.weight)/2);return`\n          translate(${u[0]}, ${u[1]})\n          rotate(${l.target.x*radToDeg%180-90})\n        `}}}};function labeler(d){return d.target.data.length?d.target.data.length.toFixed(3):"0.000"}function updateRuler(transform){transform||(transform={k:1});let height=parseFloat(this.parent.style("height"))-this.margin[2]-15,ruler=this.parent.select("g.tidytree-ruler"),bg=ruler.select("rect");if(this.ruler){"horizontal"==this.layout?(ruler.attr("transform",`translate(${this.margin[3]}, ${height})`),bg.attr("width",`calc(100% - ${this.margin[1]+this.margin[3]-15}px)`).attr("height","25px").attr("x",-5)):(ruler.attr("transform",`translate(${this.margin[3]-10}, ${this.margin[0]})`),bg.attr("height",`calc(100% - ${this.margin[0]+this.margin[2]-15}px)`).attr("width","25px").attr("x",-25));let axis="horizontal"==this.layout?d3.axisBottom():d3.axisLeft();"tree"===this.type&&"circular"!==this.layout?ruler.attr("opacity",1).call(axis.scale(d3.scaleLinear([0,this.hierarchy.height/transform.k],[0,this.scalar]))):"weighted"===this.type&&"circular"!==this.layout?ruler.attr("opacity",1).call(axis.scale(d3.scaleLinear([this.range[0],this.range[1]/transform.k],[0,this.scalar]))):ruler.transition().duration(this.animation).attr("opacity",0)}else ruler.transition().duration(this.animation).attr("opacity",0)}return labelTransformers.tree.smooth=labelTransformers.tree.straight,labelTransformers.weighted.smooth=labelTransformers.weighted.straight,labelTransformers.dendrogram=labelTransformers.tree,TidyTree.prototype.redraw=function(){let parent=this.parent;this.width=(parseFloat(parent.style("width"))-this.margin[1]-this.margin[3])*this.hStretch,this.height=(parseFloat(parent.style("height"))-this.margin[0]-this.margin[2]-25)*this.vStretch,this.scalar="horizontal"===this.layout?this.width:"vertical"===this.layout?this.height:Math.min(this.width,this.height)/2,this.hierarchy.each((d=>d.weight=this.scalar*d.value));let g=parent.select("svg g"),source=("tree"===this.type?d3.tree():d3.cluster()).size("circular"===this.layout?[2*Math.PI,Math.min(this.height,this.width)/2]:"horizontal"===this.layout?[this.height,this.width]:[this.width,this.height]);return this.equidistantLeaves?"circular"===this.layout?source.separation(((a,b)=>1/a.depth)):source.separation(((a,b)=>1)):"circular"===this.layout&&source.separation(((a,b)=>(a.parent==b.parent?1:2)/a.depth)),g.select("g.tidytree-links").selectAll("g.tidytree-link").data(source(this.hierarchy).links(),(l=>l.source.data._guid+":"+l.target.data._guid)).join((enter=>{let newLinks=enter.append("g").attr("class","tidytree-link"),linkTransformer=linkTransformers[this.type][this.mode][this.layout];newLinks.append("path").attr("fill","none").attr("stroke",(d=>findBranchColor(d,this.colorOptions))).attr("d",linkTransformer).transition().duration(this.animation).attr("opacity",1);let labelTransformer=labelTransformers[this.type][this.mode][this.layout];newLinks.append("text").attr("y",2).attr("text-anchor","middle").style("font-size","12px").text(labeler).attr("transform",labelTransformer).transition().duration(this.animation).style("opacity",this.branchDistances?1:0)}),(update=>{let linkTransformer=linkTransformers[this.type][this.mode][this.layout],paths=update.select("path");!this.animation>0?paths.attr("d",linkTransformer).attr("stroke",(d=>findBranchColor(d,this.colorOptions))):paths.transition().duration(this.animation/2).attr("stroke",(d=>findBranchColor(d,this.colorOptions))).attr("opacity",0).end().then((()=>{paths.attr("d",linkTransformer).transition().duration(this.animation/2).attr("opacity",1)}));let labelTransformer=labelTransformers[this.type][this.mode][this.layout],labels=update.select("text");this.animation?labels.transition().duration(this.animation/2).style("opacity",0).end().then((()=>{labels.text(labeler).attr("transform",labelTransformer),this.branchDistances&&labels.transition().duration(this.animation/2).style("opacity",this.branchDistances?1:0)})):labels.text(labeler).attr("transform",labelTransformer)}),(exit=>exit.transition().duration(this.animation).attr("opacity",0).remove())),g.select("g.tidytree-nodes").selectAll("g.tidytree-node").data(this.hierarchy.descendants(),(d=>d.data._guid)).join((enter=>{let nt=nodeTransformers[this.type][this.layout],newNodes=enter.append("g").attr("class","tidytree-node").classed("tidytree-node-internal",(d=>d.children)).classed("tidytree-node-leaf",(d=>!d.children)).attr("transform",nt);newNodes.append("circle").attr("title",(d=>d.data.id)).style("opacity",(d=>d.children&&this.branchNodes||!d.children&&this.leafNodes?1:0)).style("fill",(d=>findNodeColor(d,this.colorOptions))).on("mouseenter focusin",(d=>this.trigger("showtooltip",d))).on("mouseout focusout",(d=>this.trigger("hidetooltip",d))).on("contextmenu",(d=>this.trigger("contextmenu",d))).on("click",(d=>this.trigger("select",d))).attr("r",2.5);let nodeLabels=newNodes.append("text").text((d=>d.data.id)).style("font-size","12px").attr("y",2).style("opacity",(d=>d.children&&this.branchLabels||!d.children&&this.leafLabels?1:0));"vertical"===this.layout?nodeLabels.attr("text-anchor","start").attr("x",5).transition().duration(this.animation).attr("transform","rotate(90)"):"horizontal"===this.layout?nodeLabels.attr("text-anchor","start").attr("x",5).transition().duration(this.animation).attr("transform","rotate(0)"):nodeLabels.transition().duration(this.animation).attr("transform",(l=>`rotate(${l.x/Math.PI*180%180-90})`)).attr("text-anchor",(l=>l.x%(2*Math.PI)>Math.PI?"end":"start")).attr("x",(l=>l.x%(2*Math.PI)>Math.PI?-5:5)),newNodes.transition().duration(this.animation).attr("opacity",1)}),(update=>{let nodeTransformer=nodeTransformers[this.type][this.layout];update.transition().duration(this.animation).attr("transform",nodeTransformer),update.select("circle").style("fill",(d=>findNodeColor(d,this.colorOptions)));let nodeLabels=update.select("text");"vertical"===this.layout?nodeLabels.attr("text-anchor","start").attr("x",5).transition().duration(this.animation).attr("transform","rotate(90)"):"horizontal"===this.layout?nodeLabels.attr("text-anchor","start").attr("x",5).transition().duration(this.animation).attr("transform","rotate(0)"):nodeLabels.transition().duration(this.animation).attr("transform",(l=>`rotate(${l.x/Math.PI*180%180-90})`)).attr("text-anchor",(l=>l.x%(2*Math.PI)>Math.PI?"end":"start")).attr("x",(l=>l.x%(2*Math.PI)>Math.PI?-5:5))}),(exit=>exit.transition().duration(this.animation).attr("opacity",0).remove())),updateRuler.call(this),this},TidyTree.prototype.recenter=function(){let svg=this.parent.select("svg"),x=this.margin[0],y=this.margin[3];return"circular"===this.layout&&(x+=parseFloat(svg.style("width"))/2,y+=parseFloat(svg.style("height"))/2),svg.transition().duration(this.animation).call(this.zoom.transform,d3.zoomIdentity.translate(x,y)),this},TidyTree.prototype.setLayout=function(newLayout){if(!TidyTree.validLayouts.includes(newLayout))throw Error(`\n      Cannot set TidyTree to layout: ${newLayout}\n\n      Valid layouts are: ${TidyTree.validLayouts.join(", ")}\n    `);return this.layout=newLayout,this.parent?this.redraw():this},TidyTree.prototype.setColorOptions=function(newColorOptions){if(!TidyTree.validNodeColorModes.includes(newColorOptions.nodeColorMode))throw Error(`\n      Cannot set TidyTree colorOptions: ${newColorOptions.nodeColorMode}\n\n      Valid nodeColorModes are: ${TidyTree.validNodeColorModes.join(", ")}\n    `);if(!TidyTree.validBranchColorModes.includes(newColorOptions.branchColorMode))throw Error(`\n      Cannot set TidyTree colorOptions: ${newColorOptions.branchColorMode}\n\n      Valid branchColorModes are: ${TidyTree.validBranchColorModes.join(", ")}\n    `);if("list"===newColorOptions.nodeColorMode){if(!Array.isArray(newColorOptions.nodeList))throw Error('nodeList must be an array for nodeColorMode "list"')}else if("none"!==newColorOptions.branchColorMode)throw Error('branchColorMode must be "none" for nodeColorMode "none"');return this.colorOptions=newColorOptions,this.parent?this.redraw():this},TidyTree.prototype.setMode=function(newMode){if(!TidyTree.validModes.includes(newMode))throw Error(`\n      Cannot set TidyTree to mode: ${newMode},\n\n      Valid modes are: ${TidyTree.validModes.join(", ")}\n    `);return this.mode=newMode,this.parent?this.redraw():this},TidyTree.prototype.setType=function(newType){if(!TidyTree.validTypes.includes(newType))throw Error(`\n      Cannot set TidyTree to type: ${newType},\n\n      Valid types are: ${TidyTree.validTypes.join(", ")}\n    `);return this.type=newType,this.parent?this.redraw():this},TidyTree.prototype.setRotation=function(degrees){return this.rotation=degrees,this.parent&&this.parent.select("svg g").attr("transform",`\n        translate(${this.transform.x},${this.transform.y})\n        scale(${this.transform.k})\n        rotate(${this.rotation},\n          ${"circular"===this.layout?0:this.width/2},\n          ${"circular"===this.layout?0:this.height/2}\n        )\n      `),this},TidyTree.prototype.setHStretch=function(proportion){if(this.hStretch=parseFloat(proportion),this.parent){let animCache=this.animation;this.setAnimation(0),this.redraw(),this.setAnimation(animCache)}return this},TidyTree.prototype.setVStretch=function(proportion){if(this.vStretch=parseFloat(proportion),this.parent){let animCache=this.animation;this.setAnimation(0),this.redraw(),this.setAnimation(animCache)}return this},TidyTree.prototype.setAnimation=function(time){return this.animation=time,this},TidyTree.prototype.setBranchNodes=function(show){return this.branchNodes=!!show,this.parent&&this.parent.select("svg").selectAll("g.tidytree-node-internal circle").transition().duration(this.animation).style("opacity",show?1:0),this},TidyTree.prototype.eachBranchNode=function(styler){if(!this.parent)throw Error("Tree has not been rendered yet! Can't style Nodes that don't exist!");return this.parent.select("svg").selectAll("g.tidytree-node-internal circle").each((function(d){styler(this,d)})),this},TidyTree.prototype.setBranchLabels=function(show){return this.branchLabels=!!show,this.parent&&this.parent.select("svg").selectAll("g.tidytree-node-internal text").transition().duration(this.animation).style("opacity",show?1:0),this},TidyTree.prototype.eachBranchLabel=function(styler){if(!this.parent)throw Error("Tree has not been rendered yet! Can't style Nodes that don't exist!");return this.parent.select("svg").selectAll("g.tidytree-node-internal text").each((function(d,i,l){styler(this,d)})),this},TidyTree.prototype.setBranchDistances=function(show){if(this.branchDistances=!!show,this.parent){let links=this.parent.select("svg g.tidytree-links").selectAll("g.tidytree-link").selectAll("text");links.attr("transform",labelTransformers[this.type][this.mode][this.layout]),links.transition().duration(this.animation).style("opacity",show?1:0)}return this},TidyTree.prototype.eachBranchDistance=function(styler){if(!this.parent)throw Error("Tree has not been rendered yet! Can't style Nodes that don't exist!");return this.parent.select("svg g.tidytree-links").selectAll("g.tidytree-link").selectAll("text").each((function(d,i,l){styler(this,d)})),this},TidyTree.prototype.setLeafNodes=function(show){return this.leafNodes=!!show,this.parent&&this.parent.select("svg").selectAll("g.tidytree-node-leaf circle").transition().duration(this.animation).style("opacity",show?1:0),this},TidyTree.prototype.eachLeafNode=function(styler){if(!this.parent)throw Error("Tree has not been rendered yet! Can't style Nodes that don't exist!");return this.parent.select("svg").selectAll("g.tidytree-node-leaf circle").each((function(d){styler(this,d)})),this},TidyTree.prototype.setEquidistantLeaves=function(isEquidistant){return this.equidistantLeaves=!!isEquidistant,this.parent?this.redraw():this},TidyTree.prototype.setLeafLabels=function(show){return this.leafLabels=!!show,this.parent&&this.parent.select("svg").selectAll("g.tidytree-node-leaf text").transition().duration(this.animation).style("opacity",show?1:0),this},TidyTree.prototype.eachLeafLabel=function(styler){if(!this.parent)throw Error("Tree has not been rendered yet! Can't style Nodes that don't exist!");return this.parent.select("svg").selectAll("g.tidytree-node-leaf text").each((function(d){styler(this,d)})),this},TidyTree.prototype.setRuler=function(show){return this.ruler=!!show,this.parent&&(show?this.parent.select("g.tidytree-ruler").transition().duration(this.animation).attr("opacity",1):this.parent.select("g.tidytree-ruler").transition().duration(this.animation).attr("opacity",0)),this},TidyTree.prototype.getNodeGUIDs=function(leavesOnly,predicate){let nodeList=this.parent.select("svg").selectAll("g.tidytree-node-leaf circle")._groups[0];leavesOnly||(nodeList=this.parent.select("svg").selectAll("g.tidytree-node-leaf circle, g.tidytree-node-internal circle")._groups[0]);let nodeGUIDs=[];for(const node of nodeList.values())predicate&&!predicate(node)||nodeGUIDs.push(node.__data__.data._guid);return nodeGUIDs},TidyTree.prototype.search=function(test){if(!test)return;let results=this.parent.select("svg g.tidytree-nodes").selectAll("g.tidytree-node").filter(test);return this.events.search.length&&this.events.search.forEach((c=>c(results))),results},TidyTree.prototype.on=function(events,callback){return events.split(" ").forEach((event=>this.events[event].push(callback))),this},TidyTree.prototype.off=function(events){return events.split(" ").forEach((event=>this.events[event]=[])),this},TidyTree.prototype.trigger=function(events,...args){return events.split(" ").map((event=>this.events[event].length?this.events[event].map((handler=>handler(args))):[]))},TidyTree.prototype.destroy=function(){this.parent&&this.parent.html(null)},TidyTree}();
